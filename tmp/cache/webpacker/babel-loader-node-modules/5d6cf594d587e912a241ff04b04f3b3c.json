{"ast":null,"code":"// import mapboxgl from 'mapbox-gl';\n// import MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\n// const fitMapToMarkers = (map, markers) => {\n//   const bounds = new mapboxgl.LngLatBounds();\n//   markers.forEach(marker => bounds.extend([ marker.lng, marker.lat ]));\n//   map.fitBounds(bounds, { padding: 70, maxZoom: 15, duration: 0 });\n// };\n// map.on('load', function () {\n// // Add a symbol layer.\n// map.addLayer({[\n// mapboxgl.Popup().setHTML(marker.infoWindow)\n// ])};\n// const initMapbox = () => {\n//   const mapElement = document.getElementById('map');\n//   if (mapElement) { // only build a map if there's a div#map to inject into\n//     mapboxgl.accessToken = mapElement.dataset.mapboxApiKey;\n//     const map = new mapboxgl.Map({\n//       container: 'map',\n//       style: 'mapbox://styles/mapbox/dark-v10';\n//     });\n//     const markers = JSON.parse(mapElement.dataset.markers);\n//     markers.forEach((marker) => {\n//       const popup = new mapboxgl.Popup().setHTML(marker.infoWindow);\n//       // Create a HTML element for your custom marker\n//       const element = document.createElement('div');\n//       element.className = 'marker';\n//       element.style.backgroundImage = `url('${marker.image_url}')`;\n//       element.style.backgroundSize = 'contain';\n//       element.style.width = '15px';\n//       element.style.height = '15px';\n//       element.style.boxShadow = \"0px 0px 12px 1px white\"\n//       element.style.borderRadius = \"100px\"\n//       element.style.border =\"1px solid white\"\n//       new mapboxgl.Marker(element)\n//         .setLngLat([ marker.lng, marker.lat ])\n//         .setPopup(popup)\n//         .addTo(map);\n//     });\n//     map.addControl(new MapboxGeocoder({ accessToken: mapboxgl.accessToken }));\n//     fitMapToMarkers(map, markers);\n//   }\n// };\n// export { initMapbox };","map":{"version":3,"sources":["/Users/remibongiovanni/code/BTC1M/rails-out/app/javascript/plugins/init_mapbox.js"],"names":[],"mappings":"AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import mapboxgl from 'mapbox-gl';\n// import MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\n\n\n\n// const fitMapToMarkers = (map, markers) => {\n//   const bounds = new mapboxgl.LngLatBounds();\n//   markers.forEach(marker => bounds.extend([ marker.lng, marker.lat ]));\n//   map.fitBounds(bounds, { padding: 70, maxZoom: 15, duration: 0 });\n// };\n\n// map.on('load', function () {\n// // Add a symbol layer.\n// map.addLayer({[\n// mapboxgl.Popup().setHTML(marker.infoWindow)\n\n\n// ])};\n\n// const initMapbox = () => {\n//   const mapElement = document.getElementById('map');\n\n//   if (mapElement) { // only build a map if there's a div#map to inject into\n//     mapboxgl.accessToken = mapElement.dataset.mapboxApiKey;\n//     const map = new mapboxgl.Map({\n//       container: 'map',\n//       style: 'mapbox://styles/mapbox/dark-v10';\n//     });\n\n//     const markers = JSON.parse(mapElement.dataset.markers);\n//     markers.forEach((marker) => {\n\n//       const popup = new mapboxgl.Popup().setHTML(marker.infoWindow);\n\n//       // Create a HTML element for your custom marker\n//       const element = document.createElement('div');\n//       element.className = 'marker';\n//       element.style.backgroundImage = `url('${marker.image_url}')`;\n//       element.style.backgroundSize = 'contain';\n//       element.style.width = '15px';\n//       element.style.height = '15px';\n//       element.style.boxShadow = \"0px 0px 12px 1px white\"\n//       element.style.borderRadius = \"100px\"\n//       element.style.border =\"1px solid white\"\n\n\n//       new mapboxgl.Marker(element)\n//         .setLngLat([ marker.lng, marker.lat ])\n//         .setPopup(popup)\n//         .addTo(map);\n//     });\n//     map.addControl(new MapboxGeocoder({ accessToken: mapboxgl.accessToken }));\n//     fitMapToMarkers(map, markers);\n//   }\n// };\n\n// export { initMapbox };\n\n\n"]},"metadata":{},"sourceType":"module"}